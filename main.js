!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var r=function(){function t(e,r,n,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._owner=e.owner,this._id=e._id,this._cardTemplate=r,this._popupSelector=n,this._deleteSelector=o}var r,n;return r=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}},{key:"_handleCardClick",value:function(){this._popupSelector.open(this._name,this._link)}},{key:"_setEventListeners",value:function(){var t=this,e=this._element.querySelector(".card__image"),r=this._element.querySelector(".card__title"),n=this._element.querySelector(".card__garbage-can"),o=this._element.querySelector(".card__button"),i=this._element.querySelector(".card__likes");n.addEventListener("click",(function(){t._handleDeleteIconClick()})),e.addEventListener("click",(function(){t._handleCardClick()})),this._element.id=this._id,r.textContent=this._name,e.src=this._link,e.alt="".concat(this._name),i.textContent=this._likes.length,o.addEventListener("click",(function(e){t._handleLikeIconClick(e)}))}},{key:"_handleDeleteIconClick",value:function(){this._deleteSelector._form.tempid=this._id,this._deleteSelector.open()}},{key:"_handleLikeIconClick",value:function(t){t.target.classList.toggle("card__button_active")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function o(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var i=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=Promise.resolve(n),this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._items.then((function(e){e.forEach((function(e){return t._renderer(e)}))}))}},{key:"addItem",value:function(t){this._container.appendChild(t)}}])&&o(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==a(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===a(o)?o:String(o)),n)}var o}var u=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=r,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}var e,r;return e=t,(r=[{key:"_showInputError",value:function(t,e){var r=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),r.textContent=e,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_toggleButtonState",value:function(){var t=this._formElement.querySelector(this._submitButtonSelector);this._formElement.checkValidity()?(t.classList.remove(this._inactiveButtonClass),t.disabled=!1):(t.classList.add(this._inactiveButtonClass),t.disabled=!0)}},{key:"_setEventListeners",value:function(){var t=this,e=this._formElement.querySelectorAll(this._inputSelector);this._toggleButtonState(),e.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))})),this._formElement.addEventListener("submit",(function(t){t.preventDefault()}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&c(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===l(o)?o:String(o)),n)}var o}var f=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleClose=this._handleClose.bind(this)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleClose),document.addEventListener("mousedown",this._handleClose)}},{key:"close",value:function(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleClose),document.removeEventListener("mousedown",this._handleClose)}},{key:"_handleClose",value:function(t){"Escape"===t.key&&this.close(),t.target===this._popup&&this.close(),t.target===this._popup.firstElementChild.firstElementChild&&this.close()}}])&&s(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function m(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===p(o)?o:String(o)),n)}var o}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},y.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=v(n);if(o){var r=v(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._popupImage=e._popup.querySelector(".modal__popup-image"),e._popupTitle=e._popup.querySelector(".modal__popup-title"),e}return e=a,(r=[{key:"open",value:function(t,e){y(v(a.prototype),"open",this).call(this),this._popupImage.src=e,this._popupImage.alt=t,this._popupTitle.textContent=t}}])&&m(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(f);function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=E(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},S.apply(this,arguments)}function g(t,e){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},g(t,e)}function E(t){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},E(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&g(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=E(n);if(o){var r=E(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e,r){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._form=n._popup.querySelector(".form"),n._formSubmitCallback=e,n._submitButton=n._form.querySelector(".form__button"),n._fieldSelector=document.querySelector(r),n}return e=a,(r=[{key:"_getInputValues",value:function(){var t=this._form.querySelectorAll(".form__input"),e={};return t.forEach((function(t){e[t.name]=t.value})),e}},{key:"_clearInputErrors",value:function(){var t=this;this._form.querySelectorAll(".form__input").forEach((function(e){var r=e.nextElementSibling;e.classList.remove("form__input_type_error"),r.classList.remove("form__input-error_active"),r.textContent="",""===e.value&&(t._submitButton.disabled=!0,t._submitButton.classList.add("form__button_inactive"))}))}},{key:"setEventListeners",value:function(){var t=this;this._form.addEventListener("submit",(function(e){e.preventDefault(),t.setButtonState(!0),new Promise((function(e,r){var n=t._formSubmitCallback(t._getInputValues());n instanceof Promise?n.then(e).catch(r):e(n)})).then((function(){setTimeout((function(){t.setButtonState(!1),S(E(a.prototype),"close",t).call(t)}),1e3)})).catch((function(e){console.error(e),t.setButtonState(!1)}))}))}},{key:"close",value:function(){S(E(a.prototype),"close",this).call(this),this._clearInputErrors();var t=this._form.querySelectorAll(".form__input");this._fieldSelector.classList.contains("profile-info")?(t[0].value=this._fieldSelector.firstElementChild.textContent,t[1].value=this._fieldSelector.firstElementChild.nextElementSibling.textContent,this._submitButton.disabled=!1,this._submitButton.classList.remove("form__button_inactive")):(t.forEach((function(t){t.value=""})),this._submitButton.disabled=!0,this._submitButton.classList.add("form__button_inactive"))}},{key:"setButtonState",value:function(t){var e=this,r=0;t?(this._submitButton.disabled=!0,this._buttonInterval=setInterval((function(){++r>3&&(r=1),e._submitButton.textContent="Salvando".concat(".".repeat(r))}),250)):(clearInterval(this._buttonInterval),this._submitButton.textContent="Salvar",this._submitButton.disabled=!1)}}])&&h(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(f);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function C(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=O(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},j.apply(this,arguments)}function P(t,e){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},P(t,e)}function O(t){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},O(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&P(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=O(n);if(o){var r=O(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,t))._form=r._popup.querySelector(".form"),r._formSubmitCallback=e,r}return e=a,(r=[{key:"setEventListeners",value:function(){var t=this;this._form.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmitCallback(e),j(O(a.prototype),"close",t).call(t)}))}}])&&C(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(f);function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function I(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==L(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===L(o)?o:String(o)),n)}var o}var T=function(){function t(e){var r=e.nameSelector,n=e.aboutMeSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(r),this._aboutMeElement=document.querySelector(n),this._avatarElement=document.querySelector(o)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,aboutMe:this._aboutMeElement.textContent,avatar:this._avatarElement}}},{key:"setUserInfo",value:function(t){this._nameElement.textContent=t.name,this._aboutMeElement.textContent=t.about,this._avatarElement.setAttribute("src","".concat(t.avatar))}}])&&I(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),B=document.querySelector(".cards"),x=(document.querySelectorAll(".modal"),document.querySelector("#modal-profile"),document.querySelector(".profile-info__name")),U=document.querySelector(".profile-info__about-me"),R=document.querySelector(".profile__avatar"),A=(document.querySelector("#profile-modal__button"),document.querySelector("#modal-card"),document.querySelector("#card-modal__button"),document.querySelector("#modal-popup"),document.querySelector("#popup-modal__button"),document.querySelector(".profile-info__button")),D=(document.querySelector(".profile-info"),document.querySelector(".profile__button")),M=document.querySelector("#title-input"),V=document.querySelector("#url-input"),z=document.querySelector(".profile__edit-avatar"),N=(document.querySelectorAll("[id^='form']"),document.querySelector("#form-profile")),J=document.querySelector("#form-card"),H=(document.querySelectorAll("[id*='input']"),document.querySelector("#name-input")),Y=document.querySelector("#about-me-input"),F=document.querySelector("#avatar-input"),G=document.querySelector("#form-avatar"),K=(document.querySelectorAll(".card"),document.querySelector(".spinner")),Q=document.querySelector("#currentYear");function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function X(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==W(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===W(o)?o:String(o)),n)}var o}var Z=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._token=e.token}var e,r;return e=t,(r=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}},{key:"getUserInfo",value:function(){return $(!0),fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._token}}).then((function(t){return t.ok?t.json():($(!1),Promise.reject("Error: ".concat(t.status)))})).catch((function(t){"Error: ".concat(t),console.log(t),$(!1)})).finally((function(){$(!1)}))}},{key:"editUser",value:function(t,e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:e})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}},{key:"addNewCard",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:e,likes:[]})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}},{key:"removeCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}},{key:"removeLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){"Error: ".concat(t),console.log(t)}))}}])&&X(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function $(t){t?K.classList.add("spinner_visible"):K.classList.remove("spinner_visible")}Q.textContent=(new Date).getFullYear();var tt=new Z({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_04",token:"0a59ee75-18e6-488b-b0b7-62b9ce1169ca"}),et=new T({nameSelector:".profile-info__name",aboutMeSelector:".profile-info__about-me",avatarSelector:".profile__avatar"});tt.getUserInfo().then((function(t){et.setUserInfo(t),H.value=et.getUserInfo().name,Y.value=et.getUserInfo().aboutMe,F.value=et.getUserInfo().avatar,R.src=et.getUserInfo().avatar.src,x.textContent=et.getUserInfo().name,U.textContent=et.getUserInfo().aboutMe}));var rt=new u({inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},N),nt=new k("#modal-profile",(function(){tt.editUser(H.value,Y.value),x.textContent=H.value,U.textContent=Y.value}),".profile-info");A.addEventListener("click",(function(){rt.enableValidation(),nt.open()}));var ot=new u({inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},G),it=new k("#modal-avatar",(function(t){tt.updateAvatar(t.avatar_url),R.src=t.avatar_url}),".profile__container");z.addEventListener("click",(function(){F.value=R.src,ot.enableValidation(),it.open()}));var at=new q("#modal-delete",(function(t){tt.removeCard(t.target.tempid),document.getElementById(t.target.tempid).remove()})),ct=new i({items:tt.getInitialCards(),renderer:function(t){var e=new r(t,"#card-template",new b("#modal-popup"),new q("#modal-delete"));tt.getUserInfo().then((function(r){var n=e.generateCard(),o=n.querySelector(".card__likes"),i=n.querySelector(".card__button");o.textContent=t.likes.length,t.likes.forEach((function(t){t._id.includes(r._id)&&(i.setAttribute("alt","Coração marcado"),i.classList.toggle("card__button_active"))})),i.addEventListener("click",(function(){i.classList.contains("card__button_active")?tt.addLike(n.id).then((function(t){i.setAttribute("alt","Coração marcado"),o.textContent=t.likes.length})):tt.removeLike(n.id).then((function(t){i.setAttribute("alt","Coração desmarcado"),o.textContent=t.likes.length}))})),t.owner._id!==r._id&&n.querySelector(".card__garbage-can").remove(),ct.addItem(n)}))}},".cards");ct.renderItems();var ut=new u({inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},J),lt=new k("#modal-card",(function(t){tt.addNewCard(t.title,t.img_url).then((function(t){var e=new r(t,"#card-template",new b("#modal-popup"),new q("#modal-delete")).generateCard(),n=e.querySelector(".card__likes"),o=e.querySelector(".card__button");n.textContent=t.likes.length,o.addEventListener("click",(function(){o.classList.contains("card__button_active")?tt.addLike(e.id).then((function(t){o.setAttribute("alt","Coração marcado"),n.textContent=t.likes.length})):tt.removeLike(e.id).then((function(t){o.setAttribute("alt","Coração desmarcado"),n.textContent=t.likes.length}))})),B.prepend(e),M.value="",V.value="",J.lastElementChild.disabled=!0,J.lastElementChild.classList.add("form__button_inactive")}))}),".cards");D.addEventListener("click",(function(){lt.open()})),H.value=et.getUserInfo().name,Y.value=et.getUserInfo().aboutMe,F.value=et.getUserInfo().avatar.src,at.setEventListeners(),nt.setEventListeners(),ut.enableValidation(),lt.setEventListeners(),it.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,